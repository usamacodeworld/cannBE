"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const category_entity_1 = require("./category.entity");
const category_controller_1 = require("./category.controller");
const auth_middleware_1 = require("../auth/middlewares/auth.middleware");
const validation_middleware_1 = require("../../common/middlewares/validation.middleware");
const create_category_dto_1 = require("./dto/create-category.dto");
const update_category_dto_1 = require("./dto/update-category.dto");
const require_permissions_decorator_1 = require("../permissions/decorators/require-permissions.decorator");
const permission_entity_1 = require("../permissions/entities/permission.entity");
const database_1 = require("../../config/database");
const router = (0, express_1.Router)();
const categoryRepository = database_1.AppDataSource.getRepository(category_entity_1.Category);
const { createCategory, getCategories, getCategory, updateCategory, deleteCategory, getParentCategories, getSubCategories } = (0, category_controller_1.categoryController)(categoryRepository);
// Admin protected routes
router.post("/store", auth_middleware_1.authenticate, (0, require_permissions_decorator_1.RequirePermissions)(permission_entity_1.PERMISSION_TYPE.CREATE_CATEGORY), (0, validation_middleware_1.validateDto)(create_category_dto_1.CreateCategoryDto), createCategory);
router.get("/categories", auth_middleware_1.authenticate, (0, require_permissions_decorator_1.RequirePermissions)(permission_entity_1.PERMISSION_TYPE.READ_CATEGORY), getCategories);
router.get("/parents", auth_middleware_1.authenticate, (0, require_permissions_decorator_1.RequirePermissions)(permission_entity_1.PERMISSION_TYPE.READ_CATEGORY), getParentCategories);
router.get("/:id", auth_middleware_1.authenticate, (0, require_permissions_decorator_1.RequirePermissions)(permission_entity_1.PERMISSION_TYPE.READ_CATEGORY), getCategory);
router.get("/:id/subcategories", auth_middleware_1.authenticate, (0, require_permissions_decorator_1.RequirePermissions)(permission_entity_1.PERMISSION_TYPE.READ_CATEGORY), getSubCategories);
router.patch("/update/:id", auth_middleware_1.authenticate, (0, require_permissions_decorator_1.RequirePermissions)(permission_entity_1.PERMISSION_TYPE.UPDATE_CATEGORY), (0, validation_middleware_1.validateDto)(update_category_dto_1.UpdateCategoryDto), updateCategory);
router.delete("/:id", auth_middleware_1.authenticate, (0, require_permissions_decorator_1.RequirePermissions)(permission_entity_1.PERMISSION_TYPE.DELETE_CATEGORY), deleteCategory);
exports.default = router;
